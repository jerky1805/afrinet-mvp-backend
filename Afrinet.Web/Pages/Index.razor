@page "/"

@attribute [Authorize]

<PageTitle>Home</PageTitle>


<br>
@DateTime.UtcNow.ToLongDateString()
<br>
@Username
<main>
  <h1 class="visually-hidden">Heroes examples</h1>

  <div class="px-4 py-5 my-5 text-center">
    @* <img class="d-block mx-auto mb-4" src="../assets/brand/bootstrap-logo.svg" alt=""
    width="72" height="57"> *@
    <h1 class="display-5 fw-bold">Welcome to Berrington-Hunsbury Apps Demo GUI.
    </h1>
    <div class="col-lg-6 mx-auto">
      <p class="lead mb-4">Apps to showcase functiionality such as -
      <ul>
        <li>
          <MudLink Href="/loanapp">Microlending</MudLink>,
        </li>
        <li>
          <MudLink Href="/imt">International Money Transfer</MudLink>,
        </li>
        <li>
          <MudLink Href="/headoffice">Mobile
            Money Platform</MudLink>
        </li>
      </ul>


      </p>
      @* <div class="d-grid gap-2 d-sm-flex justify-content-sm-center">
      <button type="button" class="btn btn-primary btn-lg px-4 gap-3">Primary
      button</button>
      <button type="button"
      class="btn btn-outline-secondary btn-lg px-4">Secondary</button>
      <h1>Sorry</h1>
      <p>You're not authorized to reach this page. You need to log in.</p>
      </div>*@
    </div>
  </div>

</main>

@code {
  private string Username = "Anonymous User";
  private string Picture = "";
  [CascadingParameter]
  private Task<AuthenticationState>? authenticationState { get; set; }
  protected override async Task OnInitializedAsync()
  {
    if (authenticationState is not null)
    {
      var state = await authenticationState;

      Username = state?.User?.Identity?.Name ?? string.Empty;

      Picture = state?.User.Claims
      .Where(c => c.Type.Equals("picture"))
      .Select(c => c.Value)
      .FirstOrDefault() ?? string.Empty;
    }
    await base.OnInitializedAsync();
  }
}