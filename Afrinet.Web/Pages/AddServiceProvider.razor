@* @page "/serviceproviders/add/" *@
@page "/serviceproviders/edit/{Id}"
@using RAI.Models
@inject NavigationManager NavigationManager
@using RAI.Services
@inject HttpClient Http
@using System.Text.Json


<h1>@Title Agent</h1>
<hr />
<EditForm Model="@serviceProvider" OnValidSubmit="SaveServiceProvider">
    <DataAnnotationsValidator />
    <div>
        <h3>Service Provider Info</h3>
        <div class="mb-3">
            <label for="Name" class="form-label">Name</label>
            <div class="col-md-4">
                <InputText class="form-control" @bind-Value="serviceProvider.Name" />
            </div>
            <ValidationMessage For="@(() => serviceProvider.Name)" />
        </div>
        <div class="mb-3">
            <label for="Name" class="form-label">Phone Number</label>
            <div class="col-md-4">
                <InputText class="form-control" @bind-Value="serviceProvider.PhoneNumber" />
            </div>
            <ValidationMessage For="@(() => serviceProvider.PhoneNumber)" />
        </div>

        <div class="mb-3">
            <label for="Name" class="form-label">Work Description</label>
            <div class="col-md-4">
                <InputTextArea class="form-control" @bind-Value="serviceProvider.WorkDescription" />
            </div>
            <ValidationMessage For="@(() => serviceProvider.WorkDescription)" />
        </div>

        <div class="mb-3">
            <div class="col-md-4">
                <MudSelect T="string" Label="Service Provider Category" AnchorOrigin="Origin.BottomCenter"
                    @bind-Value="serviceProvider.ServiceId" Variant="Variant.Filled">
                    @* <MudSelectItem Value="@("Active")" />
                    <MudSelectItem Value="@("Inactive")" /> *@
                </MudSelect>
            </div>
            <ValidationMessage For="@(() => serviceProvider.ServiceId)" />
        </div>

        <div class="mb-3">
            <div class="col-md-4">
                <MudSelect T="string" Label="Location" AnchorOrigin="Origin.BottomCenter"
                    @bind-Value="serviceProvider.LocationId" Variant="Variant.Filled">
                    @* <MudSelectItem Value="@("Active")" />
                    <MudSelectItem Value="@("Inactive")" /> *@
                </MudSelect>
            </div>
            <ValidationMessage For="@(() => serviceProvider.LocationId)" />
        </div>
    </div>


    <div class="form-group">
        <button type="submit" class="btn btn-primary">Save</button>
        <button class="btn btn-light" @onclick="Cancel">Cancel</button>
    </div>
</EditForm>

@code {
    [Parameter]
    public string? Id { get; set; }



    private string Message = string.Empty;
    protected string Title = "Add";
    protected RAIServiceProvider serviceProvider = new();

    private bool state = false;



    protected override async Task OnParametersSetAsync()
    {
        if (Id is not null)
        {
            Title = "Edit";
            serviceProvider = await Http.GetFromJsonAsync<RAIServiceProvider>(Configuration.GetValue<string>("API_URL") +
            "ServiceProvider/" + Id);
        }
    }
    protected async Task SaveServiceProvider()
    {
        if (serviceProvider.Id is not null)
        {
            await Http.PutAsJsonAsync(Configuration.GetValue<string>("API_URL") + "ServiceProvider/" + serviceProvider.Id,
            serviceProvider);
        }
        else
        {
            serviceProvider.Id = Guid.NewGuid().ToString();
            await Http.PostAsJsonAsync(Configuration.GetValue<string>("API_URL") + "ServiceProvider", serviceProvider);
            //TODO Add Service Providers Login Management
        }
        Cancel();
    }
    public void Cancel()
    {
        NavigationManager.NavigateTo("/serviceproviders");
    }

}