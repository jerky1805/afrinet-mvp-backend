@using Afrinet.Models
@inject HttpClient Http
@inject NavigationManager NavigationManager

<h1>@Title </h1>
<hr />
<EditForm Model="@personalDetails" OnValidSubmit="SavePersonalDetailsAsync">
    <DataAnnotationsValidator />
    <div>
        <h3>Personal Details</h3>
        <div class="mb-3">
            <label for="Name" class="form-label">Full Name </label>
            <div class="col-md-4">
                <InputText class="form-control" @bind-Value="personalDetails.Names" />
            </div>
            <ValidationMessage For="@(() => personalDetails.Names)" />
        </div>
        <div class="mb-3">
            <label for="Address" class="form-label">Email Address </label>
            <div class="col-md-4">
                <InputText class="form-control" @bind-Value="personalDetails.Email" />
            </div>
            <ValidationMessage For="@(() => personalDetails.Email)" />
        </div>
        <div class="mb-3">
            <label for="Address" class="form-label">Password </label>
            <div class="col-md-4">
                <InputText class="form-control" @bind-Value="personalDetails.AddressLine2" />
            </div>
            <ValidationMessage For="@(() => personalDetails.AddressLine2)" />
        </div>
        <div class="mb-3">
            <label for="Address" class="form-label">Address </label>
            <div class="col-md-4">
                <InputText class="form-control" @bind-Value="personalDetails.AddressLine1" />
            </div>
            <ValidationMessage For="@(() => personalDetails.AddressLine1)" />
        </div>
        <div class="mb-3">
            <label for="Address" class="form-label">Mobile Number</label>
            <div class="col-md-4">
                <InputText class="form-control" @bind-Value="personalDetails.MSISDN" />
            </div>
            <ValidationMessage For="@(() => personalDetails.MSISDN)" />
        </div>
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">Save</button>
        <button class="btn btn-light" @onclick="Cancel">Cancel</button>
    </div>
</EditForm>


@code {
    [Parameter]
    public string? Id { get; set; }

    private string Message = string.Empty;
    protected string Title = "Personal Details";
    private PersonalDetails personalDetails { get; set; } = new();

    private bool state = false;


    protected override async Task OnParametersSetAsync()
    {
        if (Id is not null)
        {
            Title = "Edit";
            personalDetails = await Http.GetFromJsonAsync<PersonalDetails>("http://localhost:5032/api/PersonalDetails/" + Id);
        }
        if (Title == "Add")
        {
            return;
        }
    }
    protected async Task SavePersonalDetailsAsync()
    {
        if (personalDetails.Id is not null)
        {
            await Http.PutAsJsonAsync("http://localhost:5032/api/PersonalDetails/" + personalDetails.Id, personalDetails);
        }
        else
        {
            await Http.PostAsJsonAsync("http://localhost:5032/api/PersonalDetails", personalDetails);
        }
        Cancel();
    }
    public void Cancel()
    {
        NavigationManager.NavigateTo("/loanapp");
    }

}
