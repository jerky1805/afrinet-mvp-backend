@page "/staff/add/"
@page "/staff/edit/{Id}"
@using RAI.Models
@inject NavigationManager NavigationManager
@using RAI.Services
@inject HttpClient Http
@using System.Text.Json


<h1>@Title Agent</h1>
<hr />
<EditForm Model="@staff" OnValidSubmit="SaveStaff">
    <DataAnnotationsValidator />
    <div>
        <h3>Staff Info</h3>
        <div class="mb-3">
            <label for="Name" class="form-label">Surname</label>
            <div class="col-md-4">
                <InputText class="form-control" @bind-Value="staff.Surname" />
            </div>
            <ValidationMessage For="@(() => staff.Surname)" />
        </div>
        <div class="mb-3">
            <label for="Name" class="form-label">Other Names</label>
            <div class="col-md-4">
                <InputText class="form-control" @bind-Value="staff.OtherNames" />
            </div>
            <ValidationMessage For="@(() => staff.OtherNames)" />
        </div>
        <div class="mb-3">
            <label for="Name" class="form-label">Email</label>
            <div class="col-md-4">
                <InputText class="form-control" @bind-Value="staff.Email" />
            </div>
            <ValidationMessage For="@(() => staff.Email)" />
        </div>

        <div class="mb-3">
            <label for="Address" class="form-label">Phone Number</label>
            <div class="col-md-4">
                <InputText class="form-control" @bind-Value="staff.PhoneNumber" />
            </div>
            <ValidationMessage For="@(() => staff.PhoneNumber)" />
        </div>

        <div class="mb-3">
            <div class="col-md-4">
                <MudSelect T="string" Label="Status" AnchorOrigin="Origin.BottomCenter" @bind-Value="staff.Status"
                    Variant="Variant.Filled">
                    <MudSelectItem Value="@("Active")" />
                    <MudSelectItem Value="@("Inactive")" />
                </MudSelect>
            </div>
            <ValidationMessage For="@(() => staff.Status)" />
        </div>
    </div>


    <div class="form-group">
        <button type="submit" class="btn btn-primary">Save</button>
        <button class="btn btn-light" @onclick="Cancel">Cancel</button>
    </div>
</EditForm>

@code {
    [Parameter]
    public string? Id { get; set; }



    private string Message = string.Empty;
    protected string Title = "Add";
    protected Staff staff = new();

    private bool state = false;



    protected override async Task OnParametersSetAsync()
    {
        if (Id is not null)
        {
            Title = "Edit";
            staff = await Http.GetFromJsonAsync<Staff>(Configuration.GetValue<string>("API_URL") + "Staff/" + Id);
        }
    }
    protected async Task SaveStaff()
    {
        if (staff.Id is not null)
        {
            await Http.PutAsJsonAsync(Configuration.GetValue<string>("API_URL") + "Staff/" + staff.Id, staff);
        }
        else
        {
            staff.Id = Guid.NewGuid().ToString();
            await Http.PostAsJsonAsync(Configuration.GetValue<string>("API_URL") + "Staff", staff);
            @* UserLogin login = new UserLogin
{
username = staff.Email,
password = "Jethro2345",
email = staff.Email,
email_verified =
true,
connection = "Employers",
name = staff.OtherNames + " " + staff.Surname
};

var response = await Http.PostAsJsonAsync("https://dev-4xt1a0ul.auth0.com/api/v2/users", login);
Console.WriteLine(response); *@


            @* var client = new HttpClient();
var request = new HttpRequestMessage(HttpMethod.Post, "https://dev-4xt1a0ul.auth0.com/api/v2/users");
request.Headers.Add("Accept", "application/json");
var content = new StringContent(JsonSerializer.Serialize(login), null, "application/json");
request.Content = content;
var response = await client.SendAsync(request);
response.EnsureSuccessStatusCode();
Console.WriteLine(await response.Content.ReadAsStringAsync()); *@
        }
        Cancel();
    }
    public void Cancel()
    {
        NavigationManager.NavigateTo("/staff");
    }

}