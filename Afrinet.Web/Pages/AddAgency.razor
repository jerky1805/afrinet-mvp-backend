@page "/agencies/add/"
@page "/agencies/edit/{Id}"
@using RAI.Models
@inject NavigationManager NavigationManager
@using RAI.Services
@inject HttpClient Http
@using System.Text.Json


<h1>@Title Agent</h1>
<hr />
<EditForm Model="@agency" OnValidSubmit="SaveAgency">
    <DataAnnotationsValidator />
    <div>
        <h3>Agency Info</h3>
        <div class="mb-3">
            <label for="Name" class="form-label">Agency Name</label>
            <div class="col-md-4">
                <InputText class="form-control" @bind-Value="agency.Name" />
            </div>
            <ValidationMessage For="@(() => agency.Name)" />
        </div>
        <div class="mb-3">
            <div class="col-md-4">
                <MudSelect T="string" Label="Location" AnchorOrigin="Origin.BottomCenter" @bind-Value="agency.Location"
                    Variant="Variant.Filled">
                    <MudSelectItem Value="@("Kilimani")" />
                    <MudSelectItem Value="@("Nairobi CBD")" />
                    <MudSelectItem Value="@("Kiambu")" />
                </MudSelect>
            </div>
            <ValidationMessage For="@(() => agency.Location)" />
        </div>
        <div class="mb-3">
            <label for="Name" class="form-label">Address</label>
            <div class="col-md-4">
                <InputTextArea class="form-control" @bind-Value="agency.Address"></InputTextArea>
            </div>
            <ValidationMessage For="@(() => agency.Address)" />
        </div>
        <div class="mb-3">
            <label for="Name" class="form-label">Email Address</label>
            <div class="col-md-4">
                <InputText class="form-control" @bind-Value="agency.Email" />
            </div>
            <ValidationMessage For="@(() => agency.Email)" />
        </div>

        <div class="mb-3">
            <label for="Address" class="form-label">Phone Number</label>
            <div class="col-md-4">
                <InputText class="form-control" @bind-Value="agency.PhoneNumber" />
            </div>
            <ValidationMessage For="@(() => agency.PhoneNumber)" />
        </div>

        <div class="mb-3">
            @* <label for="Status" class="form-label">Status</label> *@
            <div class="col-md-4">
                <MudSelect T="string" Label="Status" AnchorOrigin="Origin.BottomCenter" @bind-Value="agency.Status"
                    Variant="Variant.Filled">
                    <MudSelectItem Value="@("Active")" />
                    <MudSelectItem Value="@("Suspended")" />
                </MudSelect>
            </div>
            <ValidationMessage For="@(() => agency.Status)" />
        </div>
        <div class="mb-3">
            <label for="Name" class="form-label">Description</label>
            <div class="col-md-4">
                <InputTextArea class="form-control" @bind-Value="agency.Description"></InputTextArea>
            </div>
            <ValidationMessage For="@(() => agency.Description)" />
        </div>
    </div>


    <div class="form-group">
        <button type="submit" class="btn btn-primary">Save</button>
        <button class="btn btn-light" @onclick="Cancel">Cancel</button>
    </div>
</EditForm>

@code {
    [Parameter]
    public string? Id { get; set; }



    private string Message = string.Empty;
    protected string Title = "Add";
    protected Agency agency = new();

    private bool state = false;



    protected override async Task OnParametersSetAsync()
    {
        if (Id is not null)
        {
            Title = "Edit";
            agency = await Http.GetFromJsonAsync<Agency>(Configuration.GetValue<string>("API_URL") + "Agency/" + Id);
        }
    }
    protected async Task SaveAgency()
    {
        if (agency.Id is not null)
        {
            await Http.PutAsJsonAsync(Configuration.GetValue<string>("API_URL") + "Agency/" + agency.Id, agency);
        }
        else
        {
            agency.Id = Guid.NewGuid().ToString();
            await Http.PostAsJsonAsync(Configuration.GetValue<string>("API_URL") + "Agency", agency);

        }
        Cancel();
    }
    public void Cancel()
    {
        NavigationManager.NavigateTo("/agencies");
    }

}